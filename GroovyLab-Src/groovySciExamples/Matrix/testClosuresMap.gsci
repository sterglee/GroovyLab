  



 f = { a -> return (double)a*(double)a*(double)a}

N = 3000
x = rand(N, N)


tic()
y = x.pmap(f)
 tmClosures = toc()


 
@expandRunTime.CompileJava
double f( double x) { return x*x*x; }

@groovy.transform.CompileStatic
class cf implements computeFunction {
	double f(double x) { x*x*x }
}
co = new cf()


tic()
y2  = x.pmapf(co)
tmStaticGroovy = toc()


tic()
y3  = x.pmapf(f)
tmJavaFunction = toc()

