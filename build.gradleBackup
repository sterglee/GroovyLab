apply plugin: 'java'
apply plugin: 'groovy'

compileJava.options.encoding='UTF-8'

buildscript {
    ext {
        dl4j_version = "1.0.0-beta"
        
    }
    repositories {
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
    }
    
}
apply plugin: "application"

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
}

dependencies {
    compile "org.deeplearning4j:deeplearning4j-core:${dl4j_version}"
    compile "org.nd4j:nd4j-native-platform:${dl4j_version}"
    compile "org.slf4j:slf4j-simple:1.7.25"
    compile "org.slf4j:slf4j-api:1.7.25"
    compile fileTree(dir: "lib", include: "*.jar")
    compile fileTree(dir: "build/classes/java/main", include: "*.class")
  
}


sourceSets {
    main {
       
        java {
            srcDir "src/main/java"
            
            List<File> classpathFiles = 'GroovyLab-Src lib/openblas.jar lib/stringtemplate-3.2.1.jar lib/gsl-linux-x86_64.jar lib/gsl-linux-x86.jar lib/ApacheCommonMaths.jar lib/gsl-windows-x86.jar lib/gsl-windows-x86_64.jar lib/asm-all-4.1.jar lib/ejml.jar lib/GroovySciHelp.jar lib/JASYMCA.jar lib/JFreeChart.jar lib/JavaCompiler.jar lib/MTJColtSGTJCUDA.jar lib/NumericalRecipesNUMAL.jar lib/PDFRenderer.jar lib/rsyntaxtextarea-2.5.6.jar  lib/jSciJPlasmaJSparseJTransforms.jar lib/antlr-2.7.7.jar lib/ant-1.8.4.jar lib/arpack_combo-0.1.jar lib/asm-4.0.jar lib/asm-analysis-4.0.jar lib/asm-commons-4.0.jar lib/asm-tree-4.0.jar lib/asm-util-4.0.jar  lib/commons-cli-1.2.jar lib/commons-logging-1.1.1.jar lib/csparsej.jar lib/f2jutil.jar lib/fjbg.jar lib/funclate-131.jar lib/forkjoin.jar lib/groovyall.jar  lib/groovy-console.jar lib/groovy-ant-2.0.5.jar lib/groovy-swing.jar lib/jSci.jar lib/jansi-1.6.jar lib/jblas.jar lib/jdk6Help.jar lib/jhall.jar lib/jline-2.11.jar lib/jplasma.jar lib/javacpp.jar  lib/jsearch.jar lib/jtransforms.jar lib/junit-4.10.jar lib/hamcrest-library-1.3.jar  lib/netlib-java-0.9.3.jar lib/matlabscilab.jar lib/hamcrest-core-1.3.jar  lib/gsl.jar lib/optimization.jar  lib/jarjar-1.1.jar lib/language_support.jar lib/junit-dep-4.8.2.jar lib/jna-4.0.0.jar lib/objenesis-1.2.jar lib/cglib-nodep-2.2.jar lib/rhino-1.7R4.jar lib/autocomplete-2.5.4.jar lib/itext-2.1.5.jar'.split().collect({file(it)})
            compileClasspath =  files(classpathFiles)
            srcDir "GroovyLab-Src"
    }
   }
}

jar {
    baseName="GroovyLab"
    includeEmptyDirs = false
    mainClassName="gExec.gLab.gLab"

    manifest {
        attributes('Class-Path':'lib/openblas.jar  lib/ApacheCommonMaths.jar lib/gsl-linux-x86.jar lib/gsl-linux-x86_64.jar lib/funclate-131.jar lib/stringtemplate-3.2.1.jar lib/rhino-1.7R4.jar lib/junit-dep-4.8.2.jar lib/jna-4.0.0.jar lib/asm-all-4.1.jar lib/gsl-windows-x86.jar lib/ejml.jar lib/gsl-windows-x86_64.jar  lib/GroovySciHelp.jar lib/JASYMCA.jar lib/JFreeChart.jar lib/JavaCompiler.jar lib/MTJColtSGTJCUDA.jar lib/jSciJPlasmaJSparseJTransforms.jar lib/NumericalRecipesNUMAL.jar lib/PDFRenderer.jar lib/javacpp.jar lib/rsyntaxtextarea-2.5.6.jar  lib/antlr-2.7.7.jar lib/ant-1.8.4.jar lib/arpack_combo-0.1.jar lib/asm-4.0.jar lib/asm-analysis-4.0.jar lib/asm-commons-4.0.jar lib/asm-tree-4.0.jar lib/asm-util-4.0.jar  lib/commons-cli-1.2.jar lib/commons-logging-1.1.1.jar lib/csparsej.jar lib/f2jutil.jar lib/fjbg.jar lib/forkjoin.jar lib/groovyall.jar lib/groovy-console.jar lib/groovy-ant-2.0.5.jar lib/groovy-swing.jar lib/itext-2.1.5.jar lib/jSci.jar lib/jansi-1.6.jar lib/jblas.jar lib/jdk6Help.jar lib/jhall.jar lib/jline-2.11.jar lib/jplasma.jar lib/jsearch.jar lib/jtransforms.jar lib/junit-4.10.jar lib/netlib-java-0.9.3.jar  lib/hamcrest-library-1.3.jar lib/hamcrest-core-1.3.jar lib/matlabscilab.jar  lib/gsl.jar lib/optimization.jar lib/language_support.jar lib/cglib-nodep-2.2.jar lib/objenesis-1.2.jar lib/yadic-171.jar  lib/jarjar-1.1.jar lib/autocomplete-2.5.4.jar',
'Main-Class':'gExec.gLab.gLab')
    }

def extensions = [ 'class', 'gsci',  'gif', 'groovy', 'htm', 'html', 'jpg', 'plots-gsci',  'png', 'properties',  'txt', 'weka-gsci', 'javaSGT', 'wav-gsci'] 

   
   from(sourceSets.main.java.srcDirs) {
      extensions.each({extension -> include "**/*.${extension}"})
   }

    
 }


task fatJar(type: Jar) {

    baseName="GroovyLab"
    includeEmptyDirs = false
    mainClassName="gExec.gLab.gLab"
    zip64=true

    manifest {
      attributes(  
'Main-Class':'gExec.gLab.gLab')
    }
  
  
   
    classifier = 'all'
    
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
    }

   
    with jar
   
}
