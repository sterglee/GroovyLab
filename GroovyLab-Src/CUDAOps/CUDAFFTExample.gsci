

 N = 2<<20
 x = new float[N]
 ddx = new double[N]
dx = new float[N]

for (int k=0; k<N; k++)  {
  x[k] = (float) (4.5*sin(0.03*k)+rand())
  dx[k] = x[k]
  ddx[k] = (double)x[k]
  }
  
realImffts = new float[N]

co = new CUDAOps.KernelOps()

// perform FFT with CUDA
tic()
co.cudafft(x, N, realImffts)
tmCUDAfft = toc()


// seperate real and imaginary coefficients
N2 = N/2
realffts = new float[N2]
imffts = new float[N2]

cnt=0;  elem=0 
while (cnt<N) {
  realffts[elem] = realImffts[cnt]
  cnt++
  imffts[elem] = realImffts[cnt]
  cnt++
  elem++
  }
    
    
    figure(1);
    subplot(3,1,1); plot(x, "signal")
    subplot(3,1,2); plot(realffts, "real coefficients of FFT");
    subplot(3,1,3); plot(imffts, "imaginary coefficients of FFT");
    
    tic()
    jfftdx = fft(ddx)
    tmJAVAfft = toc()
    
    
