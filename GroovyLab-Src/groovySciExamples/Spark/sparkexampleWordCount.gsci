import scala.Tuple2;

import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.sql.SparkSession;

import java.util.Arrays;
import java.util.List;
import java.util.regex.Pattern;

var conf=new SparkConf().setMaster("local[2]").setAppName("word count");

var spark = SparkSession
      .builder().master("local").config("spark.driver.bindAddress", 7060)
      .appName("Spark Word Count")
      .getOrCreate();




var SPACE = Pattern.compile(" ");

var file="/home/sterg/spark/examples/src/main/java/org/apache/spark/examples/JavaWordCount.java";
 
 var  lines = spark.read().textFile(file).javaRDD();


 var  lines = spark.read.text(file);

    JavaRDD<String> words = lines.flatMap(s -> Arrays.asList(SPACE.split(s)).iterator());

    for (Tuple2<?,?> tuple : output) {
      System.out.println(tuple._1() + ": " + tuple._2());
    JavaPairRDD<String, Integer> ones = words.mapToPair(s -> new Tuple2<>(s, 1));

    JavaPairRDD<String, Integer> counts = ones.reduceByKey((i1, i2) -> i1 + i2);

    List<Tuple2<String, Integer>> output = counts.collect();
    }
    spark.stop();
 
