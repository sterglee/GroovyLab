

//@expandRunTime.CompileJava

@groovy.transform.CompileStatic
    public static double[][] times(double[][] v1, double[][] v2) {  
        
        int v1Rows = v1.length;  // # rows of the result matrix
        int v2Cols = v2[0].length;  // # cols of the result matrix
        double [][] result = new double[v1Rows][v2Cols];
        int v1Cols = v1[0].length;
       double[] v1Colj = new double[v1Cols];
  
    for (int j = 0; j < v2Cols; j++) {
      for (int k = 0; k < v1Cols; k++) {
        v1Colj[k] =v2[k][j];
      }
      for (int i = 0; i < v1Rows; i++) {
        double[] Arowi = v1[i];
        double s = 0;
        for (int k = 0; k < v1Cols; k++) {
          s += Arowi[k]*v1Colj[k];
        }
       result[i][j] = s;
            }
      }
      return result;
   }

    N=1500
    v1=Rand(N,N)
    v2 = Rand(N,N)
    tic()
    vv = v1*v2
    tmJava = toc()
    tic()
    res = times(v1, v2)
    tmgr = toc()
    
    