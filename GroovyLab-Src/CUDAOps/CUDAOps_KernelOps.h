/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class CUDAOps_KernelOps */

#ifndef _Included_CUDAOps_KernelOps
#define _Included_CUDAOps_KernelOps
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     CUDAOps_KernelOps
 * Method:    cma
 * Signature: ([F[F[F)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cma
  (JNIEnv *, jobject, jfloatArray, jfloatArray, jfloatArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cms
 * Signature: ([F[F[F)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cms
  (JNIEnv *, jobject, jfloatArray, jfloatArray, jfloatArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cmscalar
 * Signature: ([FF[F)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cmscalar
  (JNIEnv *, jobject, jfloatArray, jfloat, jfloatArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cmm
 * Signature: ([F[F[FIII)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cmm
  (JNIEnv *, jobject, jfloatArray, jfloatArray, jfloatArray, jint, jint, jint);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cmad
 * Signature: ([D[D[D)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cmad
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cmsd
 * Signature: ([D[D[D)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cmsd
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cmscalard
 * Signature: ([DD[D)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cmscalard
  (JNIEnv *, jobject, jdoubleArray, jdouble, jdoubleArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cmmd
 * Signature: ([D[D[DIII)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cmmd
  (JNIEnv *, jobject, jdoubleArray, jdoubleArray, jdoubleArray, jint, jint, jint);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    sgemm
 * Signature: ([FII[FI[F)I
 */
JNIEXPORT jint JNICALL Java_CUDAOps_KernelOps_sgemm
  (JNIEnv *, jobject, jfloatArray, jint, jint, jfloatArray, jint, jfloatArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    dgemm
 * Signature: ([DII[DI[D)I
 */
JNIEXPORT jint JNICALL Java_CUDAOps_KernelOps_dgemm
  (JNIEnv *, jobject, jdoubleArray, jint, jint, jdoubleArray, jint, jdoubleArray);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    getCUDADeviceInfo
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CUDAOps_KernelOps_getCUDADeviceInfo
  (JNIEnv *, jobject);

/*
 * Class:     CUDAOps_KernelOps
 * Method:    cudafft
 * Signature: ([FI[F)V
 */
JNIEXPORT void JNICALL Java_CUDAOps_KernelOps_cudafft
  (JNIEnv *, jobject, jfloatArray, jint, jfloatArray);

#ifdef __cplusplus
}
#endif
#endif
